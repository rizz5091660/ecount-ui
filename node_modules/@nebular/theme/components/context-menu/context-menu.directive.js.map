{"version":3,"file":"context-menu.directive.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/context-menu/context-menu.directive.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ComponentFactoryResolver, Directive, ElementRef, HostListener, Inject, Input, OnDestroy,\n  OnInit, PLATFORM_ID,\n} from '@angular/core';\nimport { filter, takeWhile } from 'rxjs/operators';\nimport { NbPopoverDirective } from '../popover/popover.directive';\nimport { NbMenuItem, NbMenuService } from '../menu/menu.service';\nimport { NbThemeService } from '../../services/theme.service';\nimport { NbPopoverAdjustment, NbPopoverPlacement } from '../popover/helpers/model';\nimport { NbContextMenuComponent } from './context-menu.component';\nimport { NbPositioningHelper } from '../popover/helpers/positioning.helper';\nimport { NbAdjustmentHelper } from '../popover/helpers/adjustment.helper';\nimport { NbTriggerHelper } from '../popover/helpers/trigger.helper';\nimport { NbPlacementHelper } from '../popover/helpers/placement.helper';\n\n/**\n * Full featured context menu directive.\n *\n * @stacked-example(Showcase, context-menu/context-menu-showcase.component)\n *\n * Just pass menu items array:\n *\n * ```html\n * <button [nbContextMenu]=\"items\"></button>\n * ...\n * items = [{ title: 'Profile' }, { title: 'Log out' }];\n * ```\n *\n * If you want to handle context menu clicks you have to pass `nbContextMenuTag`\n * param and subscribe to events using NbMenuService.\n * `NbContextMenu` renders plain `NbMenu` inside, so\n * you have to work with it just like with `NbMenu` component:\n *\n * @stacked-example(Menu item click, context-menu/context-menu-click.component)\n *\n * Context menu has different placements, such as: top, bottom, left and right\n * which can be used as following:\n *\n * ```html\n * <button [nbContextMenu]=\"items\" nbContextMenuPlacement=\"right\"></button>\n * ```\n *\n * ```ts\n * items = [{ title: 'Profile' }, { title: 'Log out' }];\n * ```\n *\n * By default context menu will try to adjust itself to maximally fit viewport\n * and provide the best user experience. It will try to change placement of the context menu.\n * If you wanna disable this behaviour just set it falsy value.\n *\n * ```html\n * <button [nbContextMenu]=\"items\" nbContextMenuAdjustment=\"counterclockwise\"></button>\n * ```\n *\n * ```ts\n * items = [{ title: 'Profile' }, { title: 'Log out' }];\n * ```\n * */\n@Directive({ selector: '[nbContextMenu]' })\nexport class NbContextMenuDirective implements OnInit, OnDestroy {\n\n  /**\n   * Basic menu items, will be passed to the internal NbMenuComponent.\n   * */\n  @Input('nbContextMenu')\n  set items(items: NbMenuItem[]) {\n    this.validateItems(items);\n    this.popover.context = Object.assign(this.context, { items });\n  };\n\n  /**\n   * Position will be calculated relatively host element based on the placement.\n   * Can be top, right, bottom and left.\n   * */\n  @Input('nbContextMenuPlacement')\n  set placement(placement: NbPopoverPlacement) {\n    this.popover.placement = placement;\n  };\n\n  /**\n   * Container placement will be changes automatically based on this strategy if container can't fit view port.\n   * Set this property to any falsy value if you want to disable automatically adjustment.\n   * Available values: clockwise, counterclockwise.\n   * */\n  @Input('nbContextMenuAdjustment')\n  set adjustment(adjustment: NbPopoverAdjustment) {\n    this.popover.adjustment = adjustment;\n  }\n\n  /**\n   * Set NbMenu tag, which helps identify menu when working with NbMenuService.\n   * */\n  @Input('nbContextMenuTag')\n  set tag(tag: string) {\n    this.menuTag = tag;\n    this.popover.context = Object.assign(this.context, { tag });\n  }\n\n  protected popover: NbPopoverDirective;\n  protected context = {};\n\n  private menuTag: string;\n  private alive: boolean = true;\n\n  constructor(hostRef: ElementRef,\n              themeService: NbThemeService,\n              componentFactoryResolver: ComponentFactoryResolver,\n              positioningHelper: NbPositioningHelper,\n              adjustmentHelper: NbAdjustmentHelper,\n              triggerHelper: NbTriggerHelper,\n              @Inject(PLATFORM_ID) platformId,\n              placementHelper: NbPlacementHelper,\n              private menuService: NbMenuService) {\n    /**\n     * Initialize popover with all the important inputs.\n     * */\n    this.popover = new NbPopoverDirective(hostRef,\n      themeService,\n      componentFactoryResolver,\n      positioningHelper,\n      adjustmentHelper,\n      triggerHelper,\n      platformId,\n      placementHelper,\n    );\n    this.popover.content = NbContextMenuComponent;\n    this.popover.placement = NbPopoverPlacement.BOTTOM;\n  }\n\n  ngOnInit() {\n    this.popover.ngOnInit();\n    this.subscribeOnItemClick();\n  }\n\n  ngOnDestroy() {\n    this.popover.ngOnDestroy();\n    this.alive = false;\n  }\n\n  /**\n   * Show context menu.\n   * */\n  show() {\n    this.popover.show();\n  }\n\n  /**\n   * Hide context menu.\n   * */\n  hide() {\n    this.popover.hide();\n  }\n\n  /**\n   * Toggle context menu state.\n   * */\n  toggle() {\n    this.popover.toggle();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.popover.onResize();\n  }\n\n  /*\n   * NbMenuComponent will crash if don't pass menu items to it.\n   * So, we just validating them and throw custom obvious error.\n   * */\n  private validateItems(items: NbMenuItem[]) {\n    if (!items || !items.length) {\n      throw Error(`List of menu items expected, but given: ${items}`)\n    }\n  }\n\n  private subscribeOnItemClick() {\n    this.menuService.onItemClick()\n      .pipe(\n        takeWhile(() => this.alive),\n        filter(({tag}) => tag === this.menuTag),\n      )\n      .subscribe(() => this.hide());\n  }\n}\n"]}